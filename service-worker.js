const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.D5l3kFMq.js",s+"/app/immutable/nodes/0.CdyNHhqO.js",s+"/app/immutable/assets/0.blU1vccf.css",s+"/app/immutable/nodes/1.CsJ9rRTH.js",s+"/app/immutable/nodes/2.Bih-nZOh.js",s+"/app/immutable/nodes/3.DTs4fS7o.js",s+"/app/immutable/nodes/4.B2DckmRM.js",s+"/app/immutable/nodes/5.oX8Cs4Gt.js",s+"/app/immutable/assets/5.CemoNbBj.css",s+"/app/immutable/chunks/3PH632I8.js",s+"/app/immutable/chunks/B6xT251E.js",s+"/app/immutable/chunks/B9P9a9kn.js",s+"/app/immutable/chunks/B9iD71ey.js",s+"/app/immutable/chunks/BH08vWne.js",s+"/app/immutable/chunks/BKXq7fgk.js",s+"/app/immutable/chunks/BWkq6dV-.js",s+"/app/immutable/chunks/BafA_UIe.js",s+"/app/immutable/assets/index.CV-KWLNP.css",s+"/app/immutable/chunks/C0H6-rV4.js",s+"/app/immutable/chunks/CD8dWyuT.js",s+"/app/immutable/chunks/CF0OI_EQ.js",s+"/app/immutable/chunks/CHZTUfWy.js",s+"/app/immutable/chunks/CQGQRAVi.js",s+"/app/immutable/chunks/D0xo2_Lf.js",s+"/app/immutable/chunks/D7JQVTlF.js",s+"/app/immutable/chunks/DOBnF2lu.js",s+"/app/immutable/chunks/DQ2MtDYI.js",s+"/app/immutable/chunks/Dk0Q1Af3.js",s+"/app/immutable/chunks/UigaR2hT.js",s+"/app/immutable/chunks/WhW-jy8F.js",s+"/app/immutable/entry/start.BPZVAIiL.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/icons2.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profile.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/images/thumbs-up.png",s+"/manifest.json"],o="1747244121641",p=`cache-${o}`,c=[...u,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(p)).addAll(c)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==p&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),i=await caches.open(p);if(c.includes(t.pathname)){const e=await i.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&i.put(a.request,e.clone()),e}catch(e){const m=await i.match(a.request);if(m)return m;throw e}}a.respondWith(n())});
