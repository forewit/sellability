const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.D7cTABK-.js",s+"/app/immutable/nodes/0.FWaR0H_u.js",s+"/app/immutable/assets/0.DBlSPeAE.css",s+"/app/immutable/nodes/1.ZZ62Kb9A.js",s+"/app/immutable/nodes/2.CxqW7BB0.js",s+"/app/immutable/nodes/3.Cuch4iTe.js",s+"/app/immutable/nodes/4.D03bmAPT.js",s+"/app/immutable/nodes/5.BINeeJ7y.js",s+"/app/immutable/chunks/BSWeNwkK.js",s+"/app/immutable/chunks/CD3bnUR5.js",s+"/app/immutable/chunks/CIGXXUuk.js",s+"/app/immutable/chunks/CrcXUhiA.js",s+"/app/immutable/assets/mode.CemoNbBj.css",s+"/app/immutable/chunks/CwUIB_ns.js",s+"/app/immutable/chunks/D0XYee8R.js",s+"/app/immutable/chunks/D6ANuJUQ.js",s+"/app/immutable/chunks/DEGKnJZC.js",s+"/app/immutable/chunks/DPduvNo8.js",s+"/app/immutable/chunks/Dad7ONXQ.js",s+"/app/immutable/chunks/DfE7xilX.js",s+"/app/immutable/chunks/DuwhLXrj.js",s+"/app/immutable/chunks/LllUPRky.js",s+"/app/immutable/chunks/Pepjk7ja.js",s+"/app/immutable/chunks/TfyZ8XDq.js",s+"/app/immutable/assets/index.CV-KWLNP.css",s+"/app/immutable/chunks/hrXj47ln.js",s+"/app/immutable/chunks/qNTqH5kM.js",s+"/app/immutable/chunks/qi5unRdS.js",s+"/app/immutable/entry/start.wY44XY-v.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/icons2.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profile.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/manifest.json"],o="1746456061479",p=`cache-${o}`,c=[...u,...l];self.addEventListener("install",e=>{async function n(){await(await caches.open(p)).addAll(c)}e.waitUntil(n())});self.addEventListener("activate",e=>{async function n(){for(const t of await caches.keys())t!==p&&await caches.delete(t)}e.waitUntil(n())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function n(){const t=new URL(e.request.url),i=await caches.open(p);if(c.includes(t.pathname)){const a=await i.match(t.pathname);if(a)return a}try{const a=await fetch(e.request);if(!(a instanceof Response))throw new Error("invalid response from fetch");return a.status===200&&i.put(e.request,a.clone()),a}catch(a){const m=await i.match(e.request);if(m)return m;throw a}}e.respondWith(n())});
