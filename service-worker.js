const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.C_cTnJFJ.js",s+"/app/immutable/nodes/0.BtmBTA5f.js",s+"/app/immutable/assets/0.DBlSPeAE.css",s+"/app/immutable/nodes/1.D0SbLIwL.js",s+"/app/immutable/nodes/2.DqgUsWIE.js",s+"/app/immutable/nodes/3.CIUd8DCR.js",s+"/app/immutable/nodes/4.Z7aSLRof.js",s+"/app/immutable/nodes/5.DXGKypJ1.js",s+"/app/immutable/chunks/1YFX4WEy.js",s+"/app/immutable/chunks/B4R8KL8F.js",s+"/app/immutable/chunks/BB-ZjdL2.js",s+"/app/immutable/chunks/BcbHQrwy.js",s+"/app/immutable/chunks/BpHGWlue.js",s+"/app/immutable/chunks/CBM-1zP-.js",s+"/app/immutable/chunks/CbBO-nEh.js",s+"/app/immutable/chunks/Ck-z2TWz.js",s+"/app/immutable/chunks/D2ixa362.js",s+"/app/immutable/assets/index.CV-KWLNP.css",s+"/app/immutable/chunks/DFpFJyp5.js",s+"/app/immutable/chunks/Dq6Ax_Zb.js",s+"/app/immutable/chunks/a7HtMp19.js",s+"/app/immutable/chunks/c-zi90K8.js",s+"/app/immutable/chunks/eKK4EgLQ.js",s+"/app/immutable/chunks/gO9eMf0R.js",s+"/app/immutable/chunks/iTampG6z.js",s+"/app/immutable/assets/mode.CemoNbBj.css",s+"/app/immutable/chunks/kGUB_f2a.js",s+"/app/immutable/entry/start.CAOh3WXk.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/icons2.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profile.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/manifest.json"],o="1746208525105",i=`cache-${o}`,c=[...u,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(i)).addAll(c)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(i);if(c.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&p.put(a.request,e.clone()),e}catch(e){const m=await p.match(a.request);if(m)return m;throw e}}a.respondWith(n())});
