const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.B7zkJEFc.js",s+"/app/immutable/nodes/0.Bn6-jrNf.js",s+"/app/immutable/assets/0.Bx7wlMBB.css",s+"/app/immutable/nodes/1.BmkK3-Uz.js",s+"/app/immutable/nodes/2.vDXFa-Yy.js",s+"/app/immutable/nodes/3.BvBUNxWu.js",s+"/app/immutable/nodes/4.Cw0jfNjU.js",s+"/app/immutable/assets/4.CV-KWLNP.css",s+"/app/immutable/nodes/5.TE6x6XCU.js",s+"/app/immutable/chunks/7bHwRtDA.js",s+"/app/immutable/chunks/B0sUpEwB.js",s+"/app/immutable/chunks/B9dOItoa.js",s+"/app/immutable/chunks/BIhzkvuM.js",s+"/app/immutable/chunks/BRjc1gBk.js",s+"/app/immutable/chunks/BURS38i7.js",s+"/app/immutable/chunks/BVnJrnjv.js",s+"/app/immutable/chunks/BZMokTey.js",s+"/app/immutable/chunks/BqpmLgxi.js",s+"/app/immutable/chunks/C790LS5i.js",s+"/app/immutable/chunks/CE9k8lm9.js",s+"/app/immutable/chunks/CXWAKvu8.js",s+"/app/immutable/chunks/ChXPlHul.js",s+"/app/immutable/chunks/D0lbwKcy.js",s+"/app/immutable/assets/heart.CemoNbBj.css",s+"/app/immutable/chunks/D1KUTC9j.js",s+"/app/immutable/chunks/DO8NRdVL.js",s+"/app/immutable/chunks/M9gvE8hU.js",s+"/app/immutable/chunks/rwtnU4E0.js",s+"/app/immutable/entry/start.h2z7jOmd.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/manifest.json"],o="1746117695405",i=`cache-${o}`,m=[...u,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(i)).addAll(m)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(i);if(m.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&p.put(a.request,e.clone()),e}catch(e){const c=await p.match(a.request);if(c)return c;throw e}}a.respondWith(n())});
