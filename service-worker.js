const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.C-PexBwI.js",s+"/app/immutable/nodes/0.BN3Kvfsp.js",s+"/app/immutable/assets/0.CmAql6i_.css",s+"/app/immutable/nodes/1.DKLejvhN.js",s+"/app/immutable/nodes/2.DUP8CbZR.js",s+"/app/immutable/nodes/3.BbTzFbDW.js",s+"/app/immutable/nodes/4.BVwq8fyK.js",s+"/app/immutable/nodes/5.CutUIF5z.js",s+"/app/immutable/chunks/7QUV9k_q.js",s+"/app/immutable/chunks/BMyky-P7.js",s+"/app/immutable/chunks/BTrx_USu.js",s+"/app/immutable/chunks/Ba_eBNGk.js",s+"/app/immutable/chunks/CS-9gDxc.js",s+"/app/immutable/chunks/Cz3WW3sK.js",s+"/app/immutable/chunks/D6gdtVDj.js",s+"/app/immutable/chunks/DMPwpC6R.js",s+"/app/immutable/chunks/DRYB5p0z.js",s+"/app/immutable/assets/mode.CemoNbBj.css",s+"/app/immutable/chunks/DTEuy4-g.js",s+"/app/immutable/chunks/DqsZaoP8.js",s+"/app/immutable/chunks/EvdFS8ow.js",s+"/app/immutable/chunks/OzT0Q2a9.js",s+"/app/immutable/chunks/PO-g8v2b.js",s+"/app/immutable/chunks/e34UjpxZ.js",s+"/app/immutable/chunks/fHkC8HtQ.js",s+"/app/immutable/assets/index.CV-KWLNP.css",s+"/app/immutable/chunks/lf9U33X6.js",s+"/app/immutable/chunks/wJHpxxbY.js",s+"/app/immutable/entry/start.DG_W3znk.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/icons2.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profile.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/manifest.json"],o="1746459477726",i=`cache-${o}`,c=[...u,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(i)).addAll(c)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(i);if(c.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&p.put(a.request,e.clone()),e}catch(e){const m=await p.match(a.request);if(m)return m;throw e}}a.respondWith(n())});
