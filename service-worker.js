const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.Br8a3jiU.js",s+"/app/immutable/nodes/0.OKtylbr1.js",s+"/app/immutable/assets/0.CWRkmKj3.css",s+"/app/immutable/nodes/1.BEgIuPnB.js",s+"/app/immutable/nodes/2.s6BF9jfg.js",s+"/app/immutable/nodes/3.CdVIgzRI.js",s+"/app/immutable/nodes/4.DxIzxASk.js",s+"/app/immutable/nodes/5.BmRTWaJS.js",s+"/app/immutable/assets/5.CV-KWLNP.css",s+"/app/immutable/chunks/20EfMWqM.js",s+"/app/immutable/chunks/Aemg0KkF.js",s+"/app/immutable/chunks/BMM-gvAe.js",s+"/app/immutable/chunks/BRHz83m1.js",s+"/app/immutable/chunks/BXHZD-jw.js",s+"/app/immutable/chunks/BYGnPkYW.js",s+"/app/immutable/chunks/Bko61XWr.js",s+"/app/immutable/chunks/C-PC44g8.js",s+"/app/immutable/chunks/CWaBYjlr.js",s+"/app/immutable/assets/heart.CemoNbBj.css",s+"/app/immutable/chunks/CZzvDgk2.js",s+"/app/immutable/chunks/CzdtHbL6.js",s+"/app/immutable/chunks/D2exrcrs.js",s+"/app/immutable/chunks/DJ20CX5e.js",s+"/app/immutable/chunks/DPvGQa7o.js",s+"/app/immutable/chunks/DqptM0Y-.js",s+"/app/immutable/chunks/U34GVLgG.js",s+"/app/immutable/chunks/eOAyz5vc.js",s+"/app/immutable/chunks/pYERab9E.js",s+"/app/immutable/entry/start.CyPhsrW8.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/manifest.json"],o="1746122973281",i=`cache-${o}`,c=[...u,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(i)).addAll(c)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(i);if(c.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&p.put(a.request,e.clone()),e}catch(e){const m=await p.match(a.request);if(m)return m;throw e}}a.respondWith(n())});
