const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.BW8Y267J.js",s+"/app/immutable/nodes/0.C7v_dP7l.js",s+"/app/immutable/assets/0.BqjNEm1H.css",s+"/app/immutable/nodes/1.CiwH6Zo5.js",s+"/app/immutable/nodes/2.XzLQElel.js",s+"/app/immutable/nodes/3.C5Jtn4Lw.js",s+"/app/immutable/nodes/4.Cb4RE5mo.js",s+"/app/immutable/nodes/5.BVEJBGTI.js",s+"/app/immutable/assets/5.CV-KWLNP.css",s+"/app/immutable/chunks/B04mjrNB.js",s+"/app/immutable/chunks/B2NhA1r0.js",s+"/app/immutable/chunks/BWXLxuae.js",s+"/app/immutable/assets/heart.CemoNbBj.css",s+"/app/immutable/chunks/BYQLuJm3.js",s+"/app/immutable/chunks/BdP4_nWy.js",s+"/app/immutable/chunks/BflmNSbk.js",s+"/app/immutable/chunks/BqJ7LPXV.js",s+"/app/immutable/chunks/BrcFatih.js",s+"/app/immutable/chunks/Bsc2lST6.js",s+"/app/immutable/chunks/C-AsfnYy.js",s+"/app/immutable/chunks/C6JLEQX8.js",s+"/app/immutable/chunks/CimYrPmH.js",s+"/app/immutable/chunks/D0otRaGr.js",s+"/app/immutable/chunks/D2dO_q_F.js",s+"/app/immutable/chunks/D5FuPGn0.js",s+"/app/immutable/chunks/DjRl_QVl.js",s+"/app/immutable/chunks/t7vUZ0f4.js",s+"/app/immutable/chunks/zOD6IKRo.js",s+"/app/immutable/entry/start.BFjuC--0.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/icons2.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profile.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/manifest.json"],o="1746467989893",p=`cache-${o}`,c=[...u,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(p)).addAll(c)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==p&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),i=await caches.open(p);if(c.includes(t.pathname)){const e=await i.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&i.put(a.request,e.clone()),e}catch(e){const m=await i.match(a.request);if(m)return m;throw e}}a.respondWith(n())});
