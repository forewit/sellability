const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.cVZaQJvB.js",s+"/app/immutable/nodes/0.YIPJGYgD.js",s+"/app/immutable/assets/0.DffkLgbz.css",s+"/app/immutable/nodes/1.BePksu41.js",s+"/app/immutable/nodes/2.76z1-xu5.js",s+"/app/immutable/nodes/3.BhPImueI.js",s+"/app/immutable/nodes/4.Ca5tF6_N.js",s+"/app/immutable/nodes/5.D1fRl0sj.js",s+"/app/immutable/assets/5.CemoNbBj.css",s+"/app/immutable/chunks/7AlagGW7.js",s+"/app/immutable/chunks/B2hv1C7k.js",s+"/app/immutable/chunks/BOlve4QF.js",s+"/app/immutable/chunks/B_dbUle6.js",s+"/app/immutable/chunks/Bk7hEQ1-.js",s+"/app/immutable/assets/index.CV-KWLNP.css",s+"/app/immutable/chunks/Bq3X2p4M.js",s+"/app/immutable/chunks/C3OJ3EyM.js",s+"/app/immutable/chunks/CP6iZyIH.js",s+"/app/immutable/chunks/CgpcuYe6.js",s+"/app/immutable/chunks/D2NOc_Gw.js",s+"/app/immutable/chunks/D3rhxFCF.js",s+"/app/immutable/chunks/Djazm37V.js",s+"/app/immutable/chunks/DlkfHlMj.js",s+"/app/immutable/chunks/MeeaDnBW.js",s+"/app/immutable/chunks/USXIsCSz.js",s+"/app/immutable/chunks/V5fbYSCP.js",s+"/app/immutable/chunks/WcipPlO_.js",s+"/app/immutable/chunks/_zSuoAft.js",s+"/app/immutable/chunks/j_lYv77W.js",s+"/app/immutable/chunks/stc0xNIZ.js",s+"/app/immutable/entry/start.LUVZZsXb.js"],l=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/icons2.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profile.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/images/thumbs-up.png",s+"/manifest.json"],o="1747169107284",i=`cache-${o}`,c=[...u,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(i)).addAll(c)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(i);if(c.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&p.put(a.request,e.clone()),e}catch(e){const m=await p.match(a.request);if(m)return m;throw e}}a.respondWith(n())});
