const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/app/immutable/entry/app.C-zDt419.js",s+"/app/immutable/nodes/0.DF2TZUv5.js",s+"/app/immutable/assets/0.Cfo-vvy9.css",s+"/app/immutable/nodes/1.DGWvGx76.js",s+"/app/immutable/nodes/2.Dvs6s65o.js",s+"/app/immutable/nodes/3.CyGCoPmx.js",s+"/app/immutable/nodes/4.C-jZE-Iy.js",s+"/app/immutable/nodes/5.EVzXNiY4.js",s+"/app/immutable/assets/5.CCmIq-un.css",s+"/app/immutable/chunks/7uZdN51I.js",s+"/app/immutable/chunks/B-vMMu4n.js",s+"/app/immutable/chunks/B04-538D.js",s+"/app/immutable/chunks/BLWHbZsl.js",s+"/app/immutable/chunks/BQ0eCFWV.js",s+"/app/immutable/chunks/BeOSOMGv.js",s+"/app/immutable/chunks/BgNB5FpW.js",s+"/app/immutable/chunks/BoIXofSK.js",s+"/app/immutable/chunks/Bw76V7zT.js",s+"/app/immutable/chunks/BwRzXI3Y.js",s+"/app/immutable/chunks/C13cmbJf.js",s+"/app/immutable/chunks/C1nv5X5H.js",s+"/app/immutable/chunks/C58G3OPR.js",s+"/app/immutable/chunks/CMxdxio7.js",s+"/app/immutable/chunks/Cta5LdC_.js",s+"/app/immutable/chunks/DC76ykgI.js",s+"/app/immutable/chunks/DLtm0iu8.js",s+"/app/immutable/chunks/p0k6xNfU.js",s+"/app/immutable/entry/start.B3TrDqcA.js"],o=[s+"/images/cube.png",s+"/images/favicon.png",s+"/images/icons.png",s+"/images/icons2.png",s+"/images/mail.png",s+"/images/pie.png",s+"/images/pie2.png",s+"/images/profile.png",s+"/images/profit.png",s+"/images/rocket.png",s+"/manifest.json"],l="1747080428073",p=`cache-${l}`,c=[...u,...o];self.addEventListener("install",a=>{async function n(){await(await caches.open(p)).addAll(c)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==p&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),i=await caches.open(p);if(c.includes(t.pathname)){const e=await i.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&i.put(a.request,e.clone()),e}catch(e){const m=await i.match(a.request);if(m)return m;throw e}}a.respondWith(n())});
